Rishabh Dixit Presentsto you!
Git Tutorial :

1.pwd == To know where you are in present working directory

2.cd File/Directory == To change Your Directory from one to another

2.cd /c = move to C drive

3. mkdir Name == To create a new Directory

git status == To check Your Current status

git config --global user.name "Name" == To set your username in the Git

git config --global user.email "email" == To set your useremail in thi Git

git config --list == To know the content of Your Directory

(You can use vi or vim command in git to write something in your file)

git config user.name == To Know the username in Git(Same For Email)

git init == To initialize The Repository

git add --a == ALL the files now in under staging area

git commit -m "Initial commit" == To do commit in the changes you have made

git log == To know all the commits you have made

git add <file> == Adding the particular file in the stage

rm -rf .git == to delete tracking

q(Back to Bash)

git clone <website> == Cloning the repo in your working directory


Life Cycle of File: Untracked->Unmodified->Modified->Staged


                    init       add         edit      commit

javac Main/Demo.java(Compilation) == To Compie the java file

java Main/Demo(Run) == To run the java file

touch <File.Name> == To create the new File

"When you put your file into .gitignore file it ignore it"
->> *.file(All file will be ignore by gitignore)

git add . == To add all the files in Stage

git diff == (compare working directory to staging area)

git diff --staged == (compare old commit with pwd)

git commit -a -m "Direct Commit" == (tracked files will be commited)

git rm <file.name> == (Remove the file)

git mv <existing> <rename>

git rm --cached <file.name> == (Tracking stopped now)

git log -p == (See changes with comparisions)

git log --stat
git log --pretty=oneline(see all changes in one line)
git log --pretty=short(See changes in short)
git log --pretty=full(See full changes)
git log --since=n.days(See changes from n days)
git log --since=n.weeks
git log --since=n.months
git log --since=n.years
git commit --amend(To change in commit)
git restore --staged <file.name>(To unstage the files)
git rm --cached <file.name>(To unstage the files)
git checkout -- <file.name>(To bring back the information)
git checkout -f (You will find you clean pwd)

git remote
git remote -v
git config --global alias.st status

git branch -m master/git checkout master (Swith the branch)
git checkout -b "branch.name" (Making the new branch)
git merge <Branch.Name>
git branch -v (Branch with last commit)
git branch --merged (Show merged branches)
git branch --no-merged(show unmerged branches)
git branch -d <branch.name>(Delete the branch)
git branch -D <Branch.name>(Delete unmerged Branch)
git push origin bugfix:MyBugFix
git push -d origin bugfix
vi file.name(To add some changes)
cat file.name(To see the content of file)
git reset +hashkey (To delete above commits)
git stash
git stash pop
git stash pop
git rebase -i +hascode
git reset +hascode
git reset --hard +hashcode























